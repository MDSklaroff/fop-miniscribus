#############################################################################
# Makefile for building: libmozpng
# Generated by qmake (2.01a) (Qt 4.4.0) on: gio 22. mag 17:04:11 2008
# Project:  moz_png.pro
# Template: lib
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DUNICODE -DQT_LARGEFILE_SUPPORT -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_THREAD_SUPPORT
CFLAGS        = -O2 -w $(DEFINES)
CXXFLAGS      = -O2 -w -frtti -fexceptions -mthreads $(DEFINES)
INCPATH       = -I"..\..\..\..\Qt\4.4.0_src\include\QtCore" -I"..\..\..\..\Qt\4.4.0_src\include\QtCore" -I"..\..\..\..\Qt\4.4.0_src\include\QtGui" -I"..\..\..\..\Qt\4.4.0_src\include\QtGui" -I"..\..\..\..\Qt\4.4.0_src\include" -I"." -I"..\zlib" -I"c:\Qt\4.4.0_src\include\ActiveQt" -I"release" -I"." -I"..\..\..\..\Qt\4.4.0_src\mkspecs\win32-g++"
LIB        =        ar -ru
QMAKE         = c:\Qt\4.4.0_src\bin\qmake.exe
IDC           = c:\Qt\4.4.0_src\bin\idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = copy /y
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = del
DEL_DIR       = rmdir
MOVE          = move
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = release

####### Files

SOURCES       = png.c \
		pngerror.c \
		pnggccrd.c \
		pngget.c \
		pngmem.c \
		pngpread.c \
		pngread.c \
		pngrio.c \
		pngrtran.c \
		pngrutil.c \
		pngset.c \
		pngtrans.c \
		pngvcrd.c \
		pngwio.c \
		pngwrite.c \
		pngwtran.c \
		pngwutil.c 
OBJECTS       = release/png.o \
		release/pngerror.o \
		release/pnggccrd.o \
		release/pngget.o \
		release/pngmem.o \
		release/pngpread.o \
		release/pngread.o \
		release/pngrio.o \
		release/pngrtran.o \
		release/pngrutil.o \
		release/pngset.o \
		release/pngtrans.o \
		release/pngvcrd.o \
		release/pngwio.o \
		release/pngwrite.o \
		release/pngwtran.o \
		release/pngwutil.o
DIST          = 
QMAKE_TARGET  = mozpng
DESTDIR        = ..\lib\ #avoid trailing-slash linebreak
TARGET         = libmozpng.a
DESTDIR_TARGET = ..\lib\libmozpng.a

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Release  $(DESTDIR_TARGET)

$(DESTDIR_TARGET):  $(OBJECTS) 
	ar -M < object_script.libmozpng.Release 


qmake:  FORCE
	@$(QMAKE) -win32 -o Makefile.Release moz_png.pro

dist:
	$(ZIP) mozpng.zip $(SOURCES) $(DIST) moz_png.pro ..\..\..\..\Qt\4.4.0_src\mkspecs\qconfig.pri ..\..\..\..\Qt\4.4.0_src\mkspecs\features\qt_functions.prf ..\..\..\..\Qt\4.4.0_src\mkspecs\features\qt_config.prf ..\..\..\..\Qt\4.4.0_src\mkspecs\features\exclusive_builds.prf ..\..\..\..\Qt\4.4.0_src\mkspecs\features\default_pre.prf ..\..\..\..\Qt\4.4.0_src\mkspecs\features\win32\default_pre.prf ..\..\..\..\Qt\4.4.0_src\mkspecs\features\release.prf ..\..\..\..\Qt\4.4.0_src\mkspecs\features\debug_and_release.prf ..\..\..\..\Qt\4.4.0_src\mkspecs\features\default_post.prf ..\..\..\..\Qt\4.4.0_src\mkspecs\features\build_pass.prf ..\..\..\..\Qt\4.4.0_src\mkspecs\features\staticlib.prf ..\..\..\..\Qt\4.4.0_src\mkspecs\features\static.prf ..\..\..\..\Qt\4.4.0_src\mkspecs\features\warn_off.prf ..\..\..\..\Qt\4.4.0_src\mkspecs\features\win32\rtti.prf ..\..\..\..\Qt\4.4.0_src\mkspecs\features\win32\exceptions.prf ..\..\..\..\Qt\4.4.0_src\mkspecs\features\win32\stl.prf ..\..\..\..\Qt\4.4.0_src\mkspecs\features\qt.prf ..\..\..\..\Qt\4.4.0_src\mkspecs\features\win32\thread.prf ..\..\..\..\Qt\4.4.0_src\mkspecs\features\moc.prf ..\..\..\..\Qt\4.4.0_src\mkspecs\features\win32\windows.prf ..\..\..\..\Qt\4.4.0_src\mkspecs\features\resources.prf ..\..\..\..\Qt\4.4.0_src\mkspecs\features\uic.prf ..\..\..\..\Qt\4.4.0_src\mkspecs\features\yacc.prf ..\..\..\..\Qt\4.4.0_src\mkspecs\features\lex.prf  HEADERS RESOURCES IMAGES SOURCES OBJECTIVE_SOURCES FORMS YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) release\png.o release\pngerror.o release\pnggccrd.o release\pngget.o release\pngmem.o release\pngpread.o release\pngread.o release\pngrio.o release\pngrtran.o release\pngrutil.o release\pngset.o release\pngtrans.o release\pngvcrd.o release\pngwio.o release\pngwrite.o release\pngwtran.o release\pngwutil.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Release

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 



####### Compile

release/png.o: png.c png.h \
		pngconf.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release\png.o png.c

release/pngerror.o: pngerror.c png.h \
		pngconf.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release\pngerror.o pngerror.c

release/pnggccrd.o: pnggccrd.c png.h \
		pngconf.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release\pnggccrd.o pnggccrd.c

release/pngget.o: pngget.c png.h \
		pngconf.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release\pngget.o pngget.c

release/pngmem.o: pngmem.c png.h \
		pngconf.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release\pngmem.o pngmem.c

release/pngpread.o: pngpread.c png.h \
		pngconf.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release\pngpread.o pngpread.c

release/pngread.o: pngread.c png.h \
		pngconf.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release\pngread.o pngread.c

release/pngrio.o: pngrio.c png.h \
		pngconf.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release\pngrio.o pngrio.c

release/pngrtran.o: pngrtran.c png.h \
		pngconf.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release\pngrtran.o pngrtran.c

release/pngrutil.o: pngrutil.c png.h \
		pngconf.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release\pngrutil.o pngrutil.c

release/pngset.o: pngset.c png.h \
		pngconf.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release\pngset.o pngset.c

release/pngtrans.o: pngtrans.c png.h \
		pngconf.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release\pngtrans.o pngtrans.c

release/pngvcrd.o: pngvcrd.c png.h \
		pngconf.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release\pngvcrd.o pngvcrd.c

release/pngwio.o: pngwio.c png.h \
		pngconf.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release\pngwio.o pngwio.c

release/pngwrite.o: pngwrite.c png.h \
		pngconf.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release\pngwrite.o pngwrite.c

release/pngwtran.o: pngwtran.c png.h \
		pngconf.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release\pngwtran.o pngwtran.c

release/pngwutil.o: pngwutil.c png.h \
		pngconf.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o release\pngwutil.o pngwutil.c

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

